<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
        This Source Code Form is subject to the terms of the Mozilla Public
        License, v. 2.0. If a copy of the MPL was not distributed with this
        file, You can obtain one at http://mozilla.org/MPL/2.0/.
-->

<!--
        Copyright 2020 Joyent, Inc.
-->

<service_bundle type="manifest" name="minio">
    <service
        name="triton/site/minio"
        type="service"
        version="1.0.0">

        <create_default_instance enabled="true"/>
        <single_instance/>

        <dependency
            name="network"
            grouping="require_all"
            restart_on="error"
            type="service">
            <service_fmri value="svc:/milestone/network:default"/>
        </dependency>

        <dependency
            name="filesystem"
            grouping="require_all"
            restart_on="error"
            type="service">
            <service_fmri value="svc:/system/filesystem/local"/>
        </dependency>

        <dependency name="mdata"
                    grouping="require_all"
                    restart_on="none"
                    type="service">
            <service_fmri value="svc:/smartdc/mdata:execute" />
        </dependency>

        <dependency name="registrar"
                    grouping="require_all"
                    restart_on="none"
                    type="service">
            <service_fmri value="svc:/manta/application/registrar" />
        </dependency>

        <dependency name="config"
                    grouping="require_all"
                    restart_on="none"
                    type="service">
            <service_fmri value="svc:/manta/application/config-agent" />
        </dependency>

        <!-- This is an extremely long start method timeout
            but as we won't start the service till all components
            are registered in the nameservice, when testing on coal
            for large numbers of services, that can take some time -->
        <exec_method
            type="method"
            name="start"
            exec="/opt/triton/minio/bin/minio-start"
            timeout_seconds="1800">
            <method_context working_directory="/opt/triton/minio">
                <method_credential
                    user="nobody"
                    group="nobody"
                    privileges="basic,net_privaddr"/>
                <method_environment>
                    <envvar
                        name="PATH"
                        value="/opt/local/bin:/usr/bin:/usr/sbin:/bin"/>
                </method_environment>
            </method_context>
        </exec_method>

        <exec_method
            type="method"
            name="restart"
            exec=":kill"
            timeout_seconds="60">
            <method_context working_directory="/opt/triton/minio" />
        </exec_method>

        <exec_method
            type="method"
            name="stop"
            exec=":kill"
            timeout_seconds="60">
            <method_context working_directory="/opt/triton/minio" />
        </exec_method>

        <exec_method
            type="method"
            name="refresh"
            exec=":kill -HUP"
            timeout_seconds="60">
            <method_context working_directory="/opt/triton/minio/minio" />
        </exec_method>

        <property_group
            name="startd"
            type="framework">
            <propval
                name="ignore_error"
                type="astring"
                value="core,signal"/>
        </property_group>

        <property_group
            name="application"
            type="application"/>

        <stability value="Stable"/>

        <template>
            <common_name>
                <loctext xml:lang="C">Manta Minio</loctext>
            </common_name>
        </template>
    </service>
</service_bundle>
